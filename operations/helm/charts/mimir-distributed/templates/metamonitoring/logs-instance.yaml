{{- with .Values.metaMonitoring.grafanaAgent }}
{{- if .enabled }}
apiVersion: monitoring.grafana.com/v1alpha1
kind: LogsInstance
metadata:
  name: {{ include "mimir.resourceName" (dict "ctx" $ "component" "meta-monitoring") }}
  namespace: {{ $.Values.metaMonitoring.grafanaAgent.namespace | default $.Release.Namespace }}
  labels:
    {{- include "mimir.labels" (dict "ctx" $ "component" "meta-monitoring" ) | nindent 4 }}
    {{- with .labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  clients:
    {{- with .logs.remote }}
    - {{- include "mimir.metaMonitoring.logs.client" (dict "ctx" $ "url" .url "username" .auth.username "tenantId" .tenantId "passwordSecretName" .auth.passwordSecretName "usernameKey" "default") | nindent 6 -}}
    {{- end }}
    {{- range $i, $cfg := .logs.additionalClientConfigs }}
    {{- with $cfg }}
    - {{- include "mimir.metaMonitoring.logs.client" (dict "ctx" $ "url" .url "username" .auth.username "tenantId" .tenantId "passwordSecretName" .auth.passwordSecretName "usernameKey" (printf "%s-%d" "additional" $i)) | nindent 6 -}}
    {{- end }}
    {{- end }}

  # Supply an empty namespace selector to look in all namespaces. Remove
  # this to only look in the same namespace as the LogsInstance CR
  podLogsNamespaceSelector: { }

  podLogsSelector:
    matchLabels:
      {{- include "mimir.selectorLabels" (dict "ctx" $) | nindent 6 }}

{{- end -}}
{{- end -}}